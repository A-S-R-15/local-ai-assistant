"use strict";(()=>{var e={};e.id=124,e.ids=[124],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2676:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var n={};r.r(n),r.d(n,{GET:()=>c,POST:()=>p,dynamic:()=>u});var s=r(921),a=r(7380),o=r(4185),i=r(3878);let u="force-dynamic";async function p(e){try{let{audioData:t,format:r="webm"}=await e.json();return i.NextResponse.json({success:!0,transcription:{text:"Speech recognition will be implemented here",confidence:.9,language:"en-US",duration:2.5},timestamp:new Date().toISOString()})}catch(e){return console.error("Listen API error:",e),i.NextResponse.json({success:!1,error:"Speech recognition failed"},{status:500})}}async function c(){return i.NextResponse.json({status:"ready",supportedFormats:["webm","wav","mp3"],maxDuration:300,languages:["en-US","en-GB","es-ES","fr-FR","de-DE"]})}let d=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/listen/route",pathname:"/api/listen",filename:"route",bundlePath:"app/api/listen/route"},resolvedPagePath:"/home/ubuntu/local_ai_assistant_v3/app/app/api/listen/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:g}=d,x="/api/listen/route";function h(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[923,146],()=>r(2676));module.exports=n})();