"use strict";(()=>{var e={};e.id=119,e.ids=[119],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1757:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>f,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>x,staticGenerationAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{GET:()=>c,POST:()=>u,dynamic:()=>p});var a=r(921),n=r(7380),o=r(4185),i=r(3878);let p="force-dynamic";async function u(e){try{let{text:t,voice:r="default",speed:s=1,language:a="en-US"}=await e.json();if(!t)return i.NextResponse.json({success:!1,error:"Text is required"},{status:400});let n={audioUrl:`/api/audio/tts/${Date.now()}.mp3`,duration:.1*t.length,voice:r,language:a,speed:s};return i.NextResponse.json({success:!0,audio:n,timestamp:new Date().toISOString()})}catch(e){return console.error("Speak API error:",e),i.NextResponse.json({success:!1,error:"Text-to-speech failed"},{status:500})}}async function c(e){let{searchParams:t}=new URL(e.url);return t.get("text")?new i.NextResponse("Audio stream placeholder",{headers:{"Content-Type":"audio/mpeg","Content-Disposition":'inline; filename="speech.mp3"'}}):i.NextResponse.json({success:!1,error:"Text parameter is required"},{status:400})}let d=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/speak/route",pathname:"/api/speak",filename:"route",bundlePath:"app/api/speak/route"},resolvedPagePath:"/home/ubuntu/local_ai_assistant_v3/app/app/api/speak/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:x}=d,h="/api/speak/route";function f(){return(0,o.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:m})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[923,146],()=>r(1757));module.exports=s})();