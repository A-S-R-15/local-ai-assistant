"use strict";(()=>{var e={};e.id=323,e.ids=[323],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6668:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>v,patchFetch:()=>x,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l});var s={};r.r(s),r.d(s,{POST:()=>p,dynamic:()=>c});var o=r(921),n=r(7380),i=r(4185),a=r(3878);let c="force-dynamic";async function p(e){try{let{audio:t,action:r}=await e.json();if("transcribe"===r)return a.NextResponse.json({success:!0,text:"Voice transcription will be implemented here",confidence:.95});if("synthesize"===r)return a.NextResponse.json({success:!0,audioUrl:"/api/speak?text="+encodeURIComponent(t),message:"Text-to-speech will be implemented here"});return a.NextResponse.json({success:!1,error:"Invalid action"},{status:400})}catch(e){return console.error("Voice API error:",e),a.NextResponse.json({success:!1,error:"Voice processing failed"},{status:500})}}let u=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/voice/route",pathname:"/api/voice",filename:"route",bundlePath:"app/api/voice/route"},resolvedPagePath:"/home/ubuntu/local_ai_assistant_v3/app/app/api/voice/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:l,serverHooks:m}=u,v="/api/voice/route";function x(){return(0,i.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:l})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[923,146],()=>r(6668));module.exports=s})();